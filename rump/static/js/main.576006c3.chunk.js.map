{"version":3,"sources":["components/Optionsfield.js","components/Layerrow.js","components/Legend.js","components/Layerdetails.js","components/FilterPanel.js","components/Panel.js","Map.js","App.js","index.js"],"names":["Optionsfield","basemaps","activeBaseMap","changeBaseMap","className","map","basemap","i","onChange","checked","name","type","Layerrow","id","setLayerlist","maplayers","Checkbox","color","onClick","event","stopPropagation","updateChecked","layer","target","title","style","transform","Legend","stops","styling","legend","stop","backgroundColor","toLocaleString","useStyles","makeStyles","root","padding","width","sliderLayer","display","alignItems","margin","justifyContent","sliderLabels","layerDesc","fontSize","lineHeight","options","description","property","Layerdetails","opacity","classes","useState","active","FilterPanel","displayFPanel","setdisplayFPanel","categories","points","setPoints","setCategories","setincidentDate","incidentDate","React","value","setValue","handleCheck","tempCat","forEach","element","temp","Object","keys","IconButton","Box","sx","Slider","getAriaLabel","newValue","filterDate","valueLabelDisplay","min","max","marks","border","Panel","displayLPanel","setdisplayLPanel","toggle2","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","Accordion","AccordionSummary","expandIcon","dragHandleProps","AccordionDetails","placeholder","mapboxgl","accessToken","Map","baseMaps","url","pointColor","catLabel","layerlist","isLoading","setLoading","mapContainerRef","useRef","setMap","setBaseMap","externalStyling","repaintMap","reverse","addLayer","column","paint","undefined","getLayer","removeLayer","useEffect","fetchData","container","current","center","zoom","maxZoom","minZoom","on","addControl","NavigationControl","remove","rebuildMap","setStyle","filterCat","console","log","catName","values","ffpoints","filter","currentElement","cause","year","start","end","removeSource","allPoints","incident","geometry","coordinates","location","longitude","latitude","data","features","a","axios","get","response","res","response2","res2","resetSources","getSource","addSource","minzoom","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.576006c3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Optionsfield = ({basemaps, activeBaseMap, changeBaseMap}) => {\n\n  const renderOptions = (basemap, i) => {\n    return (\n      <label key={i} className=\"toggle-container\">\n        <input\n          onChange={() => changeBaseMap(i)}\n          checked={basemap.name === activeBaseMap.name}\n          name=\"toggle\"\n          type=\"radio\"\n        />\n        <div className=\"toggle txt-s py3 toggle--active-white\">\n          {basemap.name}\n        </div>\n      </label>\n    );\n  };\n  return (\n    <div className=\"toggle-group absolute top right mr60 mt12 border border--2 border--white bg-white shadow-darken10 z1\">\n      {basemaps.map(renderOptions)}\n      \n    </div>\n  );\n};\n\nexport default Optionsfield;\n","import React from \"react\";\nimport Checkbox from '@material-ui/core/Checkbox';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst Layerrow = ({ id, name, checked, setLayerlist, maplayers}) => {\n\n    const value = '100';\n\n    const handleChange = (event) => {\n        event.stopPropagation();\n        //get the ordered & checked layers\n        const updateChecked = maplayers.map((layer) => {\n            const flag = event.target.checked;\n            const cboxname = event.target.name;\n\n            if (cboxname === layer.name) {\n                layer.checked = !layer.checked;\n            }\n            return layer;\n        }\n        );\n        \n        setLayerlist(updateChecked);\n    };\n\n\n    return (\n\n        <div>\n\n            <Checkbox\n                color=\"primary\"\n                id={id}\n                name={name}\n                checked={checked}\n                onClick={handleChange}\n                title=\"toggle layer\"\n                style={{\n                    transform: \"scale(0.8)\",\n                }} />\n            {name}\n\n\n        </div>\n    );\n\n};\n\n\n\nexport default Layerrow;\n","import React from \"react\";\n\nconst Legend = ({ stops, styling, name, legend }) => {\n\n  const renderLegendKeys = (stop, i) => {\n    return (\n      <div key={i} className=\"txt-m\">\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: stop[1] }}\n        />\n        <span>{`${stop[0].toLocaleString()}`}</span>\n\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"bg-white py6 px12 shadow-darken10 round z1\">\n        \n        {legend.map(renderLegendKeys)}\n      </div>\n    </>\n  );\n};\n\nexport default Legend;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Slider } from \"@material-ui/core\";\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Legend from './Legend';\n\nimport OpacityIcon from '@material-ui/icons/Opacity';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '5px 10px',\n        width: '100%'\n\n    },\n    sliderLayer: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        margin: 'auto',\n        justifyContent: 'space-between'\n    },\n    sliderLabels: {\n        width: '80%',\n        display: 'flex',\n        alignItems: 'center',\n\n    },\n    layerDesc: {\n        fontSize: '.8rem',\n        lineHeight: '1.2',\n        margin: '0px 0px 0px 0px'\n    }\n\n});\n\n\nconst options = [\n    {\n        name: 'Basemap1',\n        description: 'Estimated total population',\n        property: 'pop_est',\n        stops: [\n            [0, '#f8d5cc'],\n            [1000000, '#231266'],\n            [5000000, '#f1a8a5'],\n            [10000000, '#ee8f9a'],\n            [50000000, '#ec739b'],\n            [100000000, '#aaff12'],\n            [250000000, '#c44cc0'],\n            [500000000, '#9f43d7'],\n            [1000000000, '#6e40e6']\n        ]\n    },\n    {\n        name: 'Basemap2',\n        description: 'Estimate total GDP in millions of dollars',\n        property: 'gdp_md_est',\n        stops: [\n            [0, '#f8d5cc'],\n            [1000, '#f4bfb6'],\n            [5000, '#f1a8a5'],\n            [10000, '#ee8f9a'],\n            [50000, '#ec739b'],\n            [100000, '#dd5ca8'],\n            [250000, '#c44cc0'],\n            [5000000, '#9f43d7'],\n            [10000000, '#6e40e6']\n        ]\n    }\n];\n\n\nconst Layerdetails = ({ id, name, checked, setLayerlist, maplayers, description, opacity, styling }) => {\n    const classes = useStyles();\n    const [active, setActive] = useState(options[0]);\n\n    const handleChange = (name, value) => {\n        // get the layer opacity\n\n        const updateChecked = name = maplayers.map((layer) => {\n            const slidername = name;\n            if (slidername === layer.name) {\n                layer.opacity = value;\n\n            }\n            return layer;\n        }\n        );\n        setLayerlist(updateChecked);\n    };\n\n\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.layerDesc}>\n                {description}\n            </div>\n            {/* <div className={classes.sliderLayer} >\n                <div title=\"Opacity\">\n                    <OpacityIcon\n                        title=\"opacity\"\n                        style={{\n                            transform: \"scale(0.8)\"\n                        }}\n                    />\n                </div>\n\n                <div className={classes.sliderLabels}>\n                    <span>0</span>\n                    <Slider\n                        key={name}\n                        value={opacity}\n                        onChange={(event, value) => handleChange(name, value)}\n                        aria-labelledby=\"continuous-slider\"\n                        style={{\n                            transform: \"scale(0.8)\",\n                        }}\n                    />\n                    <span>100</span>\n                </div>\n\n\n            </div> */}\n\n                  <Legend active={active} stops={active.stops} legend={styling[name].legend}/>\n\n        </div>\n    );\n\n};\n\n\n\nexport default Layerdetails;\n","import React, { useRef, useEffect, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Slider from '@material-ui/core/Slider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport RoomIcon from '@material-ui/icons/Room';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst FilterPanel = ({ displayFPanel,\n  setdisplayFPanel,\n  points,\n  setPoints,\n  categories,\n  setCategories,\n  incidentDate,\n  setincidentDate }) => {\n\n\n  const [value, setValue] = React.useState([2010, 2021]);\n\n  const handleChange = (event, newValue) => {\n\n    setValue(newValue);\n    const filterDate = [{\n      'start': newValue[0]\n    }, {\n      'end': newValue[1]\n    }];\n\n    setincidentDate(filterDate);\n\n  };\n\n\n  function toggle() {\n    setdisplayFPanel(false);\n  }\n\n  const handleCheck = (event) => {\n    event.stopPropagation();\n    const tempCat = [...categories];\n\n    categories.forEach(element => {\n\n      const temp = Object.keys(element)[0];\n      if (temp === event.target.name) {\n        element[temp] = event.target.checked;\n      }\n    });\n\n    setCategories(tempCat);\n\n  };\n\n  return (\n    <div>\n      <div className=\"panelTitleRow\">\n        <span className=\"panelTitle\">\n          Incidents\n        </span>\n        <span className=\"panelIcon\">\n          <IconButton onClick={toggle}>\n            <ChevronLeftIcon ></ChevronLeftIcon>\n          </IconButton>\n\n        </span>\n      </div>\n      <span>Years: {value[0]}-{value[1]}</span>\n      <Box sx={{ width: 190 }} className=\"filterBox\">\n        <Slider\n          getAriaLabel={() => 'Temperature range'}\n          value={value}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n          min={2010}\n          max={2021}\n          marks\n        />\n      </Box>\n\n\n      Cause\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='shadow'\n          name='shadow'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#727272\" }}\n        />\n        <span>Shadow economy</span>\n\n      </div>\n\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='resource'\n          name='resource'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#01a812\" }}\n        />\n        <span>Resource issue</span>\n\n      </div>\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='political'\n          name='political'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#f82d00\" }}\n        />\n        <span>Political issue</span>\n\n      </div>\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='identity'\n          name='identity'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#ffa32b\" }}\n        />\n        <span>Identity issue</span>\n\n      </div>\n\n\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='governance'\n          name='governance'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#8d00bc\" }}\n        />\n        <span>Governance issue</span>\n\n      </div>\n\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='common'\n          name='common'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#00a1d6\" }}\n        />\n        <span>Common crime</span>\n\n      </div>\n      <div className=\"txt-m\">\n        <Checkbox\n          color=\"primary\"\n          id='other'\n          name='other'\n          onClick={handleCheck}\n          title=\"toggle layer\"\n          style={{\n            padding: \" 0 5px\",\n            transform: \"scale(0.8)\",\n          }} />\n\n\n        <span\n          className=\"mr12 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: \"#ffffff\", border: \"1px solid black\" }}\n        />\n        <span>Other issue</span>\n\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default FilterPanel;","import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Layerrow from \"./Layerrow\";\nimport Layerdetails from \"./Layerdetails\";\nimport FilterPanel from \"./FilterPanel\";\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport RoomIcon from '@material-ui/icons/Room';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\n\nconst Panel = ({ maplayers, setLayerlist, styling, points, setPoints, categories, setCategories, incidentDate, setincidentDate }) => {\n    const [displayFPanel, setdisplayFPanel] = useState(true);\n    const [displayLPanel, setdisplayLPanel] = useState(true);\n\n    function handleOnDragEnd(result) {\n        if (!result.destination) return;\n\n        const items = Array.from(maplayers);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n        setLayerlist(items);\n\n    }\n\n    function toggle() {\n        setdisplayFPanel(true);\n\n    }\n\n    function toggle2() {\n        setdisplayLPanel(!displayLPanel);\n    }\n\n    return (\n        <div>\n            <div className=\"\">\n                <div className=\"bg-white absolute mt12 ml12 shadow-darken10 round\">\n                    <IconButton onClick={toggle2}>\n                        <LayersIcon></LayersIcon>\n                    </IconButton>\n                </div>\n\n            </div>\n\n            <div className={displayLPanel ? null : 'hidden'}>\n                <div id='layerpanel' className=\"bg-white absolute mt12 ml12 py12 px12 shadow-darken10 round z1 width400\">\n                    <div className=\"panelTitleRow\">\n                        <div className=\"panelTitle\">\n                            Layers\n                        </div>\n                        <div>\n                            <IconButton onClick={toggle2}>\n                                <ChevronLeftIcon></ChevronLeftIcon>\n                            </IconButton>\n                        </div>\n                    </div>\n                    <DragDropContext onDragEnd={handleOnDragEnd}>\n                        <Droppable droppableId=\"layers\">\n                            {(provided) => (\n                                <ul  {...provided.droppableProps} ref={provided.innerRef} className='cardcontainer'>\n                                    {maplayers.map(({ id, name, checked, opacity, description }, index) => {\n                                        return (\n                                            <Draggable key={id} draggableId={id} index={index}>\n                                                {(provided) => (\n                                                    <li ref={provided.innerRef} {...provided.draggableProps} className='listitem'>\n\n                                                        <Accordion className=\"layeracc\">\n                                                            <AccordionSummary\n                                                                expandIcon={<ExpandMoreIcon />}\n                                                                aria-controls=\"panel1a-content\"\n                                                                id=\"panel1a-header\"\n                                                            >\n                                                                <div className=\"layerRow\" >\n                                                                    <span className=\"material-icons handle\" title=\"drag to reorder\"  {...provided.dragHandleProps} >\n                                                                        drag_indicator\n                                                                    </span>\n\n                                                                    <Layerrow\n                                                                        id={id}\n                                                                        name={name}\n                                                                        checked={checked}\n                                                                        setLayerlist={setLayerlist}\n                                                                        maplayers={maplayers}\n                                                                    />\n                                                                </div>\n\n                                                            </AccordionSummary>\n                                                            <AccordionDetails>\n                                                                <Layerdetails\n                                                                    id={id}\n                                                                    name={name}\n                                                                    checked={checked}\n                                                                    setLayerlist={setLayerlist}\n                                                                    maplayers={maplayers}\n                                                                    opacity={opacity}\n                                                                    description={description}\n                                                                    styling={styling}\n                                                                />\n\n                                                            </AccordionDetails>\n                                                        </Accordion>\n                                                    </li>\n                                                )}\n                                            </Draggable>\n                                        )\n\n                                            ;\n                                    })}\n                                    {provided.placeholder}\n                                </ul>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n\n\n                </div>\n            </div>\n            <div className={displayLPanel ? 'filterPanelexp' : 'filterPanelcol'}>\n                <div>\n                    <div className=\"bg-white absolute mt12 shadow-darken10 round\">\n                        <IconButton onClick={toggle}>\n                            <RoomIcon></RoomIcon>\n                        </IconButton>\n                    </div>\n\n                </div>\n                <div className={displayFPanel ? null : 'hidden'}>\n                    <div className=\"bg-white absolute mt12 py12 px12 shadow-darken10 round z1 width290\">\n                        <FilterPanel\n                            displayFPanel={displayFPanel}\n                            setdisplayFPanel={setdisplayFPanel}\n                            points={points}\n                            setPoints={setPoints}\n                            categories={categories}\n                            setCategories={setCategories}\n                            incidentDate={incidentDate}\n                            setincidentDate={setincidentDate}\n                        ></FilterPanel>\n\n                    </div>\n                </div>\n            </div>\n\n        </div >\n    );\n};\n\nexport default Panel;\n","import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from '!mapbox-gl';\nimport Optionsfield from './components/Optionsfield';\nimport './Map.css';\n\nimport axios from 'axios';\n\nimport externalStyling from './env/styling.json';\n\nimport externallayers from './env/layers.json';\nimport accessKey from './env/key.json';\n\nimport Panel from './components/Panel';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicnVtcC1jb25mbGljdGFsZXJ0IiwiYSI6ImNrczRiMjhlbjFvN2gyeXJ3cWVmNGJueWoifQ.4PjwrtDVrh5i919c0hBCTA';\n\nconst Map = () => {\n\n  const baseMaps = [\n    {\n      name: 'Streets',\n      url: 'mapbox://styles/mapbox/streets-v11'\n    },\n    {\n      name: 'Satellite',\n      url: 'mapbox://styles/mapbox/satellite-v9'\n    },\n    {\n      name: 'Light',\n      url: 'mapbox://styles/mapbox/light-v10'\n    },\n    {\n      name: 'Dark',\n      url: 'mapbox://styles/mapbox/dark-v10'\n    }\n  ];\n\n  const pointColor = {\n    'shadow': '#727272',\n    'resource': '#01a812',\n    'political': '#f82d00',\n    'identity': '#ffa32b',\n    'common': '#00a1d6',\n    'governance': '#8d00bc',\n    'other': '#ffffff'\n\n  };\n  const catLabel =\n  {\n    'shadow': 'Shadow economy',\n    'resource': 'Resource issue',\n    'political': 'Political issue',\n    'identity': 'Identity issue',\n    'common': 'Common crome',\n    'governance': 'Governance issue',\n    'other': 'Other issue'\n\n  };\n\n\n  // const layers = Object.values(externallayers);\n\n  const [layerlist, setLayerlist] = useState(null);\n  const [points, setPoints] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [incidentDate, setincidentDate] = useState(null);\n\n\n\n  const [isLoading, setLoading] = useState(true);\n\n  const mapContainerRef = useRef(null);\n\n  const [map, setMap] = useState(null);\n\n  const [activeBaseMap, setBaseMap] = useState(baseMaps[0]);\n\n  const [styling, setStyling] = useState(externalStyling);\n\n\n\n\n  const repaintMap = () => {\n\n    const test = [...layerlist].reverse();\n\n    test.map(layer => {\n      if (layer.checked) {\n        map.addLayer({\n          'id': layer.name,\n          'type': layer.type,\n          'source': layer.name,\n          \"source-layer\": layer.column,\n          \"paint\": styling[layer.name].paint\n        });\n\n      } else {\n        if (map.getLayer(layer.name) !== undefined) {\n          map.removeLayer(layer.name);\n        }\n\n      }\n    });\n\n  }\n\n\n  // Initialize map when component mounts\n  useEffect(() => {\n\n    fetchData();\n\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: activeBaseMap.url,\n      center: [124, 8],\n      zoom: 7,\n      maxZoom: 15,\n      minZoom: 7\n\n    });\n\n    map.on('load', () => {\n      setMap(map);\n\n    });\n    map.addControl(new mapboxgl.NavigationControl());\n\n\n    // loop remove 7 incidents layer\n    // loop add 7 incidents layer\n\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []);\n\n\n\n\n  useEffect(() => {\n    if (map) {\n      rebuildMap(map);\n    }\n\n  }, [layerlist]);\n\n  useEffect(() => {\n    if (map) {\n      map.setStyle(activeBaseMap.url);\n      map.on('style.load', () => {\n        rebuildMap(map);\n      })\n\n    }\n\n  }, [activeBaseMap]);\n\n\n  useEffect(() => {\n    if (map) {\n      rebuildMap(map);\n    }\n  }, [categories]);\n\n  useEffect(() => {\n    if (map) {\n      rebuildMap(map);\n    }\n\n  }, [incidentDate]);\n\n  const changeBaseMap = i => {\n    setBaseMap(baseMaps[i]);\n\n  };\n\n  const filterCat = () => {\n    console.log('====================');\n\n    if (categories != null) {\n\n\n      categories.forEach(element => {\n        const catName = Object.keys(element)[0];\n        const catVal = Object.values(element)[0];\n\n        if (catVal) {\n          let fpoints = points.filter(function (currentElement) {\n            return currentElement.cause == catLabel[catName];\n\n          });\n\n          let ffpoints = fpoints.filter(function (currentElement) {\n            return (currentElement.year >= incidentDate[0].start) && (currentElement.year <= incidentDate[1].end);\n\n          });\n\n\n\n          if (map.getLayer(catName) !== undefined) {\n            map.removeLayer(catName);\n            map.removeSource(catName);\n\n          }\n          console.log(ffpoints);\n          //arrange allPoints into different arrays\n          const allPoints = ffpoints.map(incident =>\n          (\n            {\n              type: 'Feature',\n              geometry: {\n                type: 'Point',\n                coordinates: [incident.location.longitude, incident.location.latitude]\n              }\n            }));\n\n          console.log(allPoints);\n\n\n          map.addLayer({\n            id: catName,\n            type: 'circle',\n            source: {\n              type: 'geojson',\n              data: {\n                type: 'FeatureCollection',\n                features: allPoints\n              }\n            },\n            paint: { \"circle-color\": pointColor[catName] }\n          });\n\n\n\n\n\n\n\n        } else {\n          if (map.getLayer(catName) !== undefined) {\n            map.removeLayer(catName);\n            map.removeSource(catName);\n\n            console.log('remove ', catName);\n          }\n        }\n      });\n    }\n  };\n\n  const filterYear = () => {\n    if (categories != null) {\n\n\n      console.log(fpoints);\n    }\n  };\n\n\n\n  const fetchData = async () => {\n    let response = await axios.get('data.json')\n    let res = await response.data;\n    setLayerlist(Object.values(res));\n    let response2 = await axios.get('incidents.json')\n    let res2 = await response2.data;\n    setPoints(Object.values(res2));\n\n    setLoading(false);\n\n    setCategories(\n      [\n        {\n          'shadow': false\n        }, {\n          'resource': false\n        }, {\n          'political': false\n        }, {\n          'identity': false\n        }, {\n          'common': false\n        }, {\n          'governance': false\n        }, {\n          'other': false\n        }\n      ]\n    );\n\n\n    setincidentDate([{ 'start': 2010 }, { 'end': 2021 }]);\n  }\n\n\n  const rebuildMap = (map) => {\n    resetSources();\n    repaintMap();\n    setMap(map);\n    filterCat();\n  }\n\n  const resetSources = () => {\n    if (map) {\n      layerlist.map(layer => {\n\n        if (map.getLayer(layer.name) !== undefined) {\n          map.removeLayer(layer.name);\n        }\n\n        if (map.getSource(layer.name)) {\n          map.removeSource(layer.name);\n        }\n\n\n\n        map.addSource(layer.name, {\n          type: 'vector',\n          url: 'mapbox://' + layer.url,\n          minzoom: 2\n        });\n\n      });\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div>\n\n        <div ref={mapContainerRef} className='map-container' />\n\n      </div>\n    );\n  }\n\n\n  return (\n    <div>\n      <div ref={mapContainerRef} className='map-container' />\n      <Optionsfield\n        basemaps={baseMaps}\n        activeBaseMap={activeBaseMap}\n        changeBaseMap={changeBaseMap}\n      />\n      <Panel\n        maplayers={layerlist}\n        setLayerlist={setLayerlist}\n        points={points}\n        setPoints={setPoints}\n        styling={styling}\n        categories={categories}\n        setCategories={setCategories}\n        incidentDate={incidentDate}\n        setincidentDate={setincidentDate}\n      />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}