{"version":3,"sources":["Home.js","User.js","Error.js","Notes.js","App.js","reportWebVitals.js","index.js"],"names":["Home","users","map","user","index","records","to","concat","toString","name","User","months","dateformatter","t","dateTime","Date","seconds","getUTCMonth","getUTCDate","getFullYear","console","log","id","farm","bbch","species","date","Error","Notes","notes","useParams","farmname","filterednotes2","filter","note","farm_name","f","App","useState","setUsers","setNotes","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","fetchUsers","a","temp","usersCol","collection","getDocs","docs","doc","k","data","push","fetchNotes","useEffect","className","exact","path","render","props","match","params","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9d1f379.chunk.js","sourcesContent":["import './App.css';\n\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\nfunction Home({ users }) {\n    return (\n\n        <table>\n            <tbody>\n                <tr>\n                    <td>User</td>\n                </tr>\n                {users.map((user, index, records) => (\n\n                    <tr key={index}>\n                        <td>\n                            <Link to={\"user/\".concat(index.toString())}>{user.name}</Link>\n\n                        </td>\n                    </tr>\n\n\n                ))}\n            </tbody>\n        </table>\n\n    );\n}\n\nexport default Home;\n","import './App.css';\nimport { Link } from 'react-router-dom';\n\nimport React from 'react';\n\nfunction User({ user }) {\n\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    function dateformatter(t) {\n        var dateTime = new Date(t.seconds * 1000);\n        var datestring = months[dateTime.getUTCMonth()] + \" \" + dateTime.getUTCDate() + \", \" + dateTime.getFullYear();\n        return datestring.toString();\n    }\n\n\n    if (user == null) {\n        console.log('refreshed');\n        return (<div>loading...</div>);\n    } else {\n        return (\n            <div>\n                {user.id}\n                <table>\n                    <tbody>\n                        {user.records.map((farm, index) => (\n                            <tr key={index}>\n                                <td>\n                                    {farm.name}\n                                </td>\n                                <td>\n                                    {farm.bbch}\n                                </td>\n                                <td>\n                                    {farm.species}\n                                </td>\n                                <td>\n                                    {dateformatter(farm.date)}\n                                </td>\n                                <td>\n                                    <Link to={\"notes/\".concat(user.id).concat(\"/\").concat(farm.name)}>Read Notes</Link>\n                                </td>\n                            </tr>\n\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n\n        );\n    }\n}\n\nexport default User;\n","import './App.css';\n\nimport React from 'react';\n\nfunction Error() {\n\n\n\n  return (\n      <div>Error 404</div>\n\n  );\n}\n\nexport default Error;\n","import './App.css';\nimport React from 'react';\nimport {\n    useParams\n} from \"react-router-dom\";\n\nfunction Notes({ notes }) {\n    const { id, farmname } = useParams();\n\n    let filterednotes = notes.filter(note => note.farm_name === farmname);\n    let filterednotes2 = filterednotes.filter(note => note.user === id);\n\n    if (notes == null) {\n        console.log('refreshed');\n        return (<div>loading...</div>);\n    } else {\n        return (\n            <div>\n                {\n                    filterednotes2.map((f,index) => (\n                        <span key={index}>\n                            {f.note}\n                        </span>\n                    ))\n\n                }\n            </div>\n\n        );\n    }\n}\n\nexport default Notes;\n","/* eslint-disable array-callback-return */\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport User from './User';\nimport Error from './Error';\nimport Notes from './Notes';\n\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\n\n\n\nfunction App() {\n\n\n  const [users, setUsers] = useState([]);\n  const [notes, setNotes] = useState([]);\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDAP5bsQk9IYpBbvUVQqvI7d4RqYh5Xdqs\",\n    authDomain: \"baby-names-app-db-f5128.firebaseapp.com\",\n    databaseURL: \"https://baby-names-app-db-f5128.firebaseio.com\",\n    projectId: \"baby-names-app-db-f5128\",\n    storageBucket: \"baby-names-app-db-f5128.appspot.com\",\n    messagingSenderId: \"398460116167\",\n    appId: \"1:398460116167:web:78c9c6c09226652e\"\n  };\n\n\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n\n\n\n  const fetchUsers = async () => {\n    const temp = [];\n    const usersCol = collection(db, 'users');\n    const usersSnapshot = await getDocs(usersCol);\n    usersSnapshot.docs.map(doc => {\n      var k = doc.data();\n      k['id'] = doc.id;\n      temp.push(k)\n    }\n\n    );\n\n    setUsers(temp);\n    \n  }\n\n\n  // eslint-disable-next-line no-unused-vars\n  const fetchNotes = async () => {\n    const temp = [];\n    const usersCol = collection(db, 'notes');\n    const usersSnapshot = await getDocs(usersCol);\n    usersSnapshot.docs.map(doc => {\n\n\n      temp.push(doc.data());\n    }\n    );\n    setNotes(temp);\n  }\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    fetchUsers();\n    fetchNotes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Home users={users} {...props} />} />\n\n          <Route exact path=\"/user/:index\" render={({ match }) => (\n            <User user={users[match.params.index]} />\n          )} />\n          <Route exact path=\"/user/notes/:id/:farmname\">\n            <Notes notes={notes}></Notes>\n\n          </Route>\n\n          <Route component={Error} />\n\n\n\n        </Switch>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}